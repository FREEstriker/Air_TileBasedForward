#version 450
#extension GL_GOOGLE_include_directive: enable

#define LOCAL_GROUP_WIDTH 16
layout (local_size_x = LOCAL_GROUP_WIDTH, local_size_y = LOCAL_GROUP_WIDTH) in;

#define PI (3.141592653589793)
#define G (9.81)

layout(push_constant) uniform ResolveConstantInfo
{
    vec3 displacementFactor;
	ivec2 imageSize;
} constantInfo;

layout (set = 0, binding = 0, rg32f) uniform readonly image2DArray originalDisplacementImageArray;
layout (set = 1, binding = 0, rgba16f) uniform writeonly image2D displacementImage;

void main()
{	
	// thread/saple Y = world Z
	const ivec2 threadPosition = ivec2(gl_GlobalInvocationID.xy);

	if(constantInfo.imageSize.x <= threadPosition.x || constantInfo.imageSize.y <= threadPosition.y) return;
	
	const ivec2 pixelPosition = threadPosition;
	const int MN = constantInfo.imageSize.x * constantInfo.imageSize.y;

	const float height = -imageLoad(originalDisplacementImageArray, ivec3(pixelPosition, 0)).r / MN;
	const float x = imageLoad(originalDisplacementImageArray, ivec3(pixelPosition, 1)).r / MN;
	const float y = imageLoad(originalDisplacementImageArray, ivec3(pixelPosition, 2)).r / MN;
	imageStore(displacementImage, pixelPosition, vec4(x, height, y, 0) * vec4(constantInfo.displacementFactor, 0));
}